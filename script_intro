linux intro:
-mkdir -p -  родительские директории
file - тип файла.
strings - осуществить вывод читаемых человеком ascii-строк, которые обнаруживаются в бинарных файлах.
ls / - go to the root dir
which - поиск бинарных файлов 
wc - подсчет слов  строк и символов
sort - в алфавите
find / - fins everywhere
find . -name "*.conf" - gоиска файлов с расширением .conf в текущей директории (и всех поддиректориях)
gzip - gunzip (open .gz)- заархивировать
zcat и zmore (see for .gz)
bzip2 - bunzip2 - see .bz and open it

----------------------------------------------------

project 1:

1.creating a github repository
(I used the ssh-keygen, then created a repository and connected to the computer by copying it by the ssh link) 

2.create directory for our data SRR_DARA


3. install SRA TollKit (The fasterq-dump tool extracts data in FASTQ- or FASTA-format from SRA-accessions)

wget https://ftp-trace.ncbi.nlm.nih.gov/sra/sdk/current/sratoolkit.current-ubuntu64.tar.gz
tar -vxzf sratoolkit.tar.gz
export PATH=$PATH:~/home/julia/sratoolkit.3.0.0-ubuntu64/bin
vdb-config -i
#or
conda activate
conda install -c bioconda sra-tools


4. download rhe data in SRR:
wget https://trace.ncbi.nlm.nih.gov/Traces/sra-reads-be/fasta?acc=SRR10971381 #or
fasterq-dump --split-files SRA_download/SRR10971381  -O SRR_DATA/
gzip SRR_DATA/*.fastq
ls SRR_DATA/

5. Usage of assembler SPADes
wget http://cab.spbu.ru/files/release3.14.1/SPAdes-3.14.1-Linux.tar.gz
tar -xzf SPAdes-3.14.1-Linux.tar.gz
cd SPAdes-3.14.1-Linux/bin/

6. assembly (we will not use many parameters)
~/SPAdes-3.15.5/bin/metaspades.py -t 16 -1../SRR_DATA/SRR10971381 1.fastaq -2 ../SRR_DATA/SRR10971381 2.fastaq -o SRR_DATA

7. quality check with FastQC:
wget  https://www.bioinformatics.babraham.ac.uk/projects/fastqc/fastqc_v0.11.9.zip
unzip fastqc_v0.11.9.zip
(then create the folder for the data):
mkdir_reportFastQC
cd reportFasQC/ -t 12 -o ../SRR_DATA/SRR10971381_*

(open html file and see the report
here we see statistics (we need the similar length of reads) and so on.
Our data is in a good quality, as we see on the report and we can proceed our research)

8.QUAST:
wget https://github.com/ablab/quast/releases/download/quast_5.2.0/quast-5.2.0.tar.gz
tar -xzf quast-5.2.0.tar.gz
cd quast-5.2.0
./setup.py install
../quast-5.2.0/metaquast.py -o reportFastQC -t 16 assembly/scaffolds/fasta
#or
conda create -n quast_tool -c conda-forge -c bioconda -c defaults quast
conda activate quast_tool 
#to get the result:
grep ">" spades_scaffolds.fasta | more

#sra-toolkit
conda create -n samtool 
conda activate samtools
samtools faidx spades_scaffolds.fasta #indexing multi-fasta file -> I got the “spades_scaffolds.fasta.fai
samtools faidx spades_scaffolds.fasta NODE_1_length_29907_cov_150.822528 > contig.fa #suspicious sequence and I separated it
more spades_scaffolds.fasta.fai  | awk '$2 >= 3000 {print $1}' | xargs samtools faidx spades_scaffolds.fasta > 3000.fa 

#(here we can see reference genomes too (mataquast.log, even in pictures: inversions, translocations, relocations, mismathes)

10. BLAST: Basic Local Alignment Search Tool (nih.gov)
1. Choose Nucleotide BLAST (nucleotide to nucleotide)
2. Enter or FASTA sequence or we can just enter the sequence in the "field" (Database: Standart database) 
3. Organism : RNA viruses (taxid:2559587) (as we know covid-19 - RNA-virus)
4. Entrez Query: 1900/01/01:2020/01/01[PDAT]
5. Program Selection 
5.1. Optimize for ->Highly similar sequences (megablast)


11.Prokka(rapid bacterial genome annotation):
conda create -n prokka_tool -c conda-forge -c bioconda -c default prokka
conda activate prokka_tool
prokka contig.fa  --kingdom Viruses 


12. Getting primers: 
#Exception error: Multiple templates are currently not supported!














